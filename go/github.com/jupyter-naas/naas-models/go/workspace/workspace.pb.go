// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.26.1
// source: workspace.proto

package workspace

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	errors "github.com/jupyter-naas/naas-models/go/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Workspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name               *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	FavIcon            *string `protobuf:"bytes,3,opt,name=fav_icon,json=favIcon,proto3,oneof" json:"fav_icon,omitempty"`
	LargeLogo          *string `protobuf:"bytes,4,opt,name=large_logo,json=largeLogo,proto3,oneof" json:"large_logo,omitempty"`
	SmallLogo          *string `protobuf:"bytes,5,opt,name=small_logo,json=smallLogo,proto3,oneof" json:"small_logo,omitempty"`
	PrimaryColor       *string `protobuf:"bytes,6,opt,name=primary_color,json=primaryColor,proto3,oneof" json:"primary_color,omitempty"`
	SecondaryColor     *string `protobuf:"bytes,7,opt,name=secondary_color,json=secondaryColor,proto3,oneof" json:"secondary_color,omitempty"`
	TertiaryColor      *string `protobuf:"bytes,8,opt,name=tertiary_color,json=tertiaryColor,proto3,oneof" json:"tertiary_color,omitempty"`
	TextPrimaryColor   *string `protobuf:"bytes,9,opt,name=text_primary_color,json=textPrimaryColor,proto3,oneof" json:"text_primary_color,omitempty"`
	TextSecondaryColor *string `protobuf:"bytes,10,opt,name=text_secondary_color,json=textSecondaryColor,proto3,oneof" json:"text_secondary_color,omitempty"`
	IsPersonal         *bool   `protobuf:"varint,11,opt,name=is_personal,json=isPersonal,proto3,oneof" json:"is_personal,omitempty"`
	CreatedAt          *string `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
}

func (x *Workspace) Reset() {
	*x = Workspace{}
	mi := &file_workspace_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workspace) ProtoMessage() {}

func (x *Workspace) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workspace.ProtoReflect.Descriptor instead.
func (*Workspace) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{0}
}

func (x *Workspace) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Workspace) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Workspace) GetFavIcon() string {
	if x != nil && x.FavIcon != nil {
		return *x.FavIcon
	}
	return ""
}

func (x *Workspace) GetLargeLogo() string {
	if x != nil && x.LargeLogo != nil {
		return *x.LargeLogo
	}
	return ""
}

func (x *Workspace) GetSmallLogo() string {
	if x != nil && x.SmallLogo != nil {
		return *x.SmallLogo
	}
	return ""
}

func (x *Workspace) GetPrimaryColor() string {
	if x != nil && x.PrimaryColor != nil {
		return *x.PrimaryColor
	}
	return ""
}

func (x *Workspace) GetSecondaryColor() string {
	if x != nil && x.SecondaryColor != nil {
		return *x.SecondaryColor
	}
	return ""
}

func (x *Workspace) GetTertiaryColor() string {
	if x != nil && x.TertiaryColor != nil {
		return *x.TertiaryColor
	}
	return ""
}

func (x *Workspace) GetTextPrimaryColor() string {
	if x != nil && x.TextPrimaryColor != nil {
		return *x.TextPrimaryColor
	}
	return ""
}

func (x *Workspace) GetTextSecondaryColor() string {
	if x != nil && x.TextSecondaryColor != nil {
		return *x.TextSecondaryColor
	}
	return ""
}

func (x *Workspace) GetIsPersonal() bool {
	if x != nil && x.IsPersonal != nil {
		return *x.IsPersonal
	}
	return false
}

func (x *Workspace) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

type WorkspaceCreation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	FavIcon            *string `protobuf:"bytes,2,opt,name=fav_icon,json=favIcon,proto3,oneof" json:"fav_icon,omitempty"`
	LargeLogo          *string `protobuf:"bytes,3,opt,name=large_logo,json=largeLogo,proto3,oneof" json:"large_logo,omitempty"`
	SmallLogo          *string `protobuf:"bytes,4,opt,name=small_logo,json=smallLogo,proto3,oneof" json:"small_logo,omitempty"`
	PrimaryColor       *string `protobuf:"bytes,5,opt,name=primary_color,json=primaryColor,proto3,oneof" json:"primary_color,omitempty"`
	SecondaryColor     *string `protobuf:"bytes,6,opt,name=secondary_color,json=secondaryColor,proto3,oneof" json:"secondary_color,omitempty"`
	TertiaryColor      *string `protobuf:"bytes,7,opt,name=tertiary_color,json=tertiaryColor,proto3,oneof" json:"tertiary_color,omitempty"`
	TextPrimaryColor   *string `protobuf:"bytes,8,opt,name=text_primary_color,json=textPrimaryColor,proto3,oneof" json:"text_primary_color,omitempty"`
	TextSecondaryColor *string `protobuf:"bytes,9,opt,name=text_secondary_color,json=textSecondaryColor,proto3,oneof" json:"text_secondary_color,omitempty"`
	IsPersonal         *bool   `protobuf:"varint,10,opt,name=is_personal,json=isPersonal,proto3,oneof" json:"is_personal,omitempty"`
}

func (x *WorkspaceCreation) Reset() {
	*x = WorkspaceCreation{}
	mi := &file_workspace_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceCreation) ProtoMessage() {}

func (x *WorkspaceCreation) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceCreation.ProtoReflect.Descriptor instead.
func (*WorkspaceCreation) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{1}
}

func (x *WorkspaceCreation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *WorkspaceCreation) GetFavIcon() string {
	if x != nil && x.FavIcon != nil {
		return *x.FavIcon
	}
	return ""
}

func (x *WorkspaceCreation) GetLargeLogo() string {
	if x != nil && x.LargeLogo != nil {
		return *x.LargeLogo
	}
	return ""
}

func (x *WorkspaceCreation) GetSmallLogo() string {
	if x != nil && x.SmallLogo != nil {
		return *x.SmallLogo
	}
	return ""
}

func (x *WorkspaceCreation) GetPrimaryColor() string {
	if x != nil && x.PrimaryColor != nil {
		return *x.PrimaryColor
	}
	return ""
}

func (x *WorkspaceCreation) GetSecondaryColor() string {
	if x != nil && x.SecondaryColor != nil {
		return *x.SecondaryColor
	}
	return ""
}

func (x *WorkspaceCreation) GetTertiaryColor() string {
	if x != nil && x.TertiaryColor != nil {
		return *x.TertiaryColor
	}
	return ""
}

func (x *WorkspaceCreation) GetTextPrimaryColor() string {
	if x != nil && x.TextPrimaryColor != nil {
		return *x.TextPrimaryColor
	}
	return ""
}

func (x *WorkspaceCreation) GetTextSecondaryColor() string {
	if x != nil && x.TextSecondaryColor != nil {
		return *x.TextSecondaryColor
	}
	return ""
}

func (x *WorkspaceCreation) GetIsPersonal() bool {
	if x != nil && x.IsPersonal != nil {
		return *x.IsPersonal
	}
	return false
}

type WorkspaceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	FavIcon            *string `protobuf:"bytes,3,opt,name=fav_icon,json=favIcon,proto3,oneof" json:"fav_icon,omitempty"`
	LargeLogo          *string `protobuf:"bytes,4,opt,name=large_logo,json=largeLogo,proto3,oneof" json:"large_logo,omitempty"`
	SmallLogo          *string `protobuf:"bytes,5,opt,name=small_logo,json=smallLogo,proto3,oneof" json:"small_logo,omitempty"`
	PrimaryColor       *string `protobuf:"bytes,6,opt,name=primary_color,json=primaryColor,proto3,oneof" json:"primary_color,omitempty"`
	SecondaryColor     *string `protobuf:"bytes,7,opt,name=secondary_color,json=secondaryColor,proto3,oneof" json:"secondary_color,omitempty"`
	TertiaryColor      *string `protobuf:"bytes,8,opt,name=tertiary_color,json=tertiaryColor,proto3,oneof" json:"tertiary_color,omitempty"`
	TextPrimaryColor   *string `protobuf:"bytes,9,opt,name=text_primary_color,json=textPrimaryColor,proto3,oneof" json:"text_primary_color,omitempty"`
	TextSecondaryColor *string `protobuf:"bytes,10,opt,name=text_secondary_color,json=textSecondaryColor,proto3,oneof" json:"text_secondary_color,omitempty"`
}

func (x *WorkspaceUpdate) Reset() {
	*x = WorkspaceUpdate{}
	mi := &file_workspace_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUpdate) ProtoMessage() {}

func (x *WorkspaceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUpdate.ProtoReflect.Descriptor instead.
func (*WorkspaceUpdate) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{2}
}

func (x *WorkspaceUpdate) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *WorkspaceUpdate) GetFavIcon() string {
	if x != nil && x.FavIcon != nil {
		return *x.FavIcon
	}
	return ""
}

func (x *WorkspaceUpdate) GetLargeLogo() string {
	if x != nil && x.LargeLogo != nil {
		return *x.LargeLogo
	}
	return ""
}

func (x *WorkspaceUpdate) GetSmallLogo() string {
	if x != nil && x.SmallLogo != nil {
		return *x.SmallLogo
	}
	return ""
}

func (x *WorkspaceUpdate) GetPrimaryColor() string {
	if x != nil && x.PrimaryColor != nil {
		return *x.PrimaryColor
	}
	return ""
}

func (x *WorkspaceUpdate) GetSecondaryColor() string {
	if x != nil && x.SecondaryColor != nil {
		return *x.SecondaryColor
	}
	return ""
}

func (x *WorkspaceUpdate) GetTertiaryColor() string {
	if x != nil && x.TertiaryColor != nil {
		return *x.TertiaryColor
	}
	return ""
}

func (x *WorkspaceUpdate) GetTextPrimaryColor() string {
	if x != nil && x.TextPrimaryColor != nil {
		return *x.TextPrimaryColor
	}
	return ""
}

func (x *WorkspaceUpdate) GetTextSecondaryColor() string {
	if x != nil && x.TextSecondaryColor != nil {
		return *x.TextSecondaryColor
	}
	return ""
}

type WorkspaceUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	WorkspaceId *string `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	Role        *string `protobuf:"bytes,3,opt,name=role,proto3,oneof" json:"role,omitempty"`
	Status      *string `protobuf:"bytes,4,opt,name=status,proto3,oneof" json:"status,omitempty"`
	CreateAt    *string `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3,oneof" json:"create_at,omitempty"`
	UpdateAt    *string `protobuf:"bytes,6,opt,name=update_at,json=updateAt,proto3,oneof" json:"update_at,omitempty"`
}

func (x *WorkspaceUser) Reset() {
	*x = WorkspaceUser{}
	mi := &file_workspace_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUser) ProtoMessage() {}

func (x *WorkspaceUser) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUser.ProtoReflect.Descriptor instead.
func (*WorkspaceUser) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{3}
}

func (x *WorkspaceUser) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *WorkspaceUser) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *WorkspaceUser) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *WorkspaceUser) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *WorkspaceUser) GetCreateAt() string {
	if x != nil && x.CreateAt != nil {
		return *x.CreateAt
	}
	return ""
}

func (x *WorkspaceUser) GetUpdateAt() string {
	if x != nil && x.UpdateAt != nil {
		return *x.UpdateAt
	}
	return ""
}

type WorkspaceUserUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   *string `protobuf:"bytes,1,opt,name=role,proto3,oneof" json:"role,omitempty"`
	Status *string `protobuf:"bytes,2,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *WorkspaceUserUpdate) Reset() {
	*x = WorkspaceUserUpdate{}
	mi := &file_workspace_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUserUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserUpdate) ProtoMessage() {}

func (x *WorkspaceUserUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserUpdate.ProtoReflect.Descriptor instead.
func (*WorkspaceUserUpdate) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{4}
}

func (x *WorkspaceUserUpdate) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *WorkspaceUserUpdate) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type WorkspacePlugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	WorkspaceId *string `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	Payload     *string `protobuf:"bytes,3,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	CreatedAt   *string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	IsPublic    *bool   `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3,oneof" json:"is_public,omitempty"`
}

func (x *WorkspacePlugin) Reset() {
	*x = WorkspacePlugin{}
	mi := &file_workspace_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePlugin) ProtoMessage() {}

func (x *WorkspacePlugin) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePlugin.ProtoReflect.Descriptor instead.
func (*WorkspacePlugin) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{5}
}

func (x *WorkspacePlugin) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *WorkspacePlugin) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *WorkspacePlugin) GetPayload() string {
	if x != nil && x.Payload != nil {
		return *x.Payload
	}
	return ""
}

func (x *WorkspacePlugin) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *WorkspacePlugin) GetIsPublic() bool {
	if x != nil && x.IsPublic != nil {
		return *x.IsPublic
	}
	return false
}

type WorkspacePluginUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload  *string `protobuf:"bytes,1,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	IsPublic *bool   `protobuf:"varint,2,opt,name=is_public,json=isPublic,proto3,oneof" json:"is_public,omitempty"`
}

func (x *WorkspacePluginUpdate) Reset() {
	*x = WorkspacePluginUpdate{}
	mi := &file_workspace_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginUpdate) ProtoMessage() {}

func (x *WorkspacePluginUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginUpdate.ProtoReflect.Descriptor instead.
func (*WorkspacePluginUpdate) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{6}
}

func (x *WorkspacePluginUpdate) GetPayload() string {
	if x != nil && x.Payload != nil {
		return *x.Payload
	}
	return ""
}

func (x *WorkspacePluginUpdate) GetIsPublic() bool {
	if x != nil && x.IsPublic != nil {
		return *x.IsPublic
	}
	return false
}

type WorkspaceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
}

func (x *WorkspaceListRequest) Reset() {
	*x = WorkspaceListRequest{}
	mi := &file_workspace_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceListRequest) ProtoMessage() {}

func (x *WorkspaceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceListRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceListRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{7}
}

func (x *WorkspaceListRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type WorkspaceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspaces []*Workspace          `protobuf:"bytes,1,rep,name=workspaces,proto3" json:"workspaces,omitempty"`
	Error      *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceListResponse) Reset() {
	*x = WorkspaceListResponse{}
	mi := &file_workspace_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceListResponse) ProtoMessage() {}

func (x *WorkspaceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceListResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceListResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{8}
}

func (x *WorkspaceListResponse) GetWorkspaces() []*Workspace {
	if x != nil {
		return x.Workspaces
	}
	return nil
}

func (x *WorkspaceListResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type InvitedWorkspaceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
}

func (x *InvitedWorkspaceListRequest) Reset() {
	*x = InvitedWorkspaceListRequest{}
	mi := &file_workspace_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvitedWorkspaceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitedWorkspaceListRequest) ProtoMessage() {}

func (x *InvitedWorkspaceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitedWorkspaceListRequest.ProtoReflect.Descriptor instead.
func (*InvitedWorkspaceListRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{9}
}

func (x *InvitedWorkspaceListRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type InvitedWorkspaceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspaces []*Workspace          `protobuf:"bytes,1,rep,name=workspaces,proto3" json:"workspaces,omitempty"`
	Error      *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *InvitedWorkspaceListResponse) Reset() {
	*x = InvitedWorkspaceListResponse{}
	mi := &file_workspace_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvitedWorkspaceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitedWorkspaceListResponse) ProtoMessage() {}

func (x *InvitedWorkspaceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitedWorkspaceListResponse.ProtoReflect.Descriptor instead.
func (*InvitedWorkspaceListResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{10}
}

func (x *InvitedWorkspaceListResponse) GetWorkspaces() []*Workspace {
	if x != nil {
		return x.Workspaces
	}
	return nil
}

func (x *InvitedWorkspaceListResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	Workspace *WorkspaceCreation `protobuf:"bytes,2,opt,name=workspace,proto3,oneof" json:"workspace,omitempty"`
}

func (x *WorkspaceCreateRequest) Reset() {
	*x = WorkspaceCreateRequest{}
	mi := &file_workspace_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceCreateRequest) ProtoMessage() {}

func (x *WorkspaceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceCreateRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceCreateRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{11}
}

func (x *WorkspaceCreateRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *WorkspaceCreateRequest) GetWorkspace() *WorkspaceCreation {
	if x != nil {
		return x.Workspace
	}
	return nil
}

type WorkspaceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace            `protobuf:"bytes,1,opt,name=workspace,proto3,oneof" json:"workspace,omitempty"`
	Error     *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceCreateResponse) Reset() {
	*x = WorkspaceCreateResponse{}
	mi := &file_workspace_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceCreateResponse) ProtoMessage() {}

func (x *WorkspaceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceCreateResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceCreateResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{12}
}

func (x *WorkspaceCreateResponse) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *WorkspaceCreateResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	WorkspaceId *string `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
}

func (x *WorkspaceGetRequest) Reset() {
	*x = WorkspaceGetRequest{}
	mi := &file_workspace_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGetRequest) ProtoMessage() {}

func (x *WorkspaceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGetRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceGetRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{13}
}

func (x *WorkspaceGetRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *WorkspaceGetRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

type WorkspaceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace            `protobuf:"bytes,1,opt,name=workspace,proto3,oneof" json:"workspace,omitempty"`
	Error     *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceGetResponse) Reset() {
	*x = WorkspaceGetResponse{}
	mi := &file_workspace_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGetResponse) ProtoMessage() {}

func (x *WorkspaceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGetResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceGetResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{14}
}

func (x *WorkspaceGetResponse) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *WorkspaceGetResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId *string          `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	Workspace   *WorkspaceUpdate `protobuf:"bytes,2,opt,name=workspace,proto3,oneof" json:"workspace,omitempty"`
}

func (x *WorkspaceUpdateRequest) Reset() {
	*x = WorkspaceUpdateRequest{}
	mi := &file_workspace_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUpdateRequest) ProtoMessage() {}

func (x *WorkspaceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUpdateRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{15}
}

func (x *WorkspaceUpdateRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *WorkspaceUpdateRequest) GetWorkspace() *WorkspaceUpdate {
	if x != nil {
		return x.Workspace
	}
	return nil
}

type WorkspaceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace            `protobuf:"bytes,1,opt,name=workspace,proto3,oneof" json:"workspace,omitempty"`
	Error     *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceUpdateResponse) Reset() {
	*x = WorkspaceUpdateResponse{}
	mi := &file_workspace_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUpdateResponse) ProtoMessage() {}

func (x *WorkspaceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUpdateResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{16}
}

func (x *WorkspaceUpdateResponse) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *WorkspaceUpdateResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	WorkspaceId *string `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
}

func (x *WorkspaceDeleteRequest) Reset() {
	*x = WorkspaceDeleteRequest{}
	mi := &file_workspace_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceDeleteRequest) ProtoMessage() {}

func (x *WorkspaceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceDeleteRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{17}
}

func (x *WorkspaceDeleteRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *WorkspaceDeleteRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

type WorkspaceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *errors.ErrorResponse `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceDeleteResponse) Reset() {
	*x = WorkspaceDeleteResponse{}
	mi := &file_workspace_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceDeleteResponse) ProtoMessage() {}

func (x *WorkspaceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceDeleteResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{18}
}

func (x *WorkspaceDeleteResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceInviteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId *string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	// Types that are assignable to User:
	//
	//	*WorkspaceInviteUserRequest_UserId
	//	*WorkspaceInviteUserRequest_Email
	User isWorkspaceInviteUserRequest_User `protobuf_oneof:"user"`
	Role *string                           `protobuf:"bytes,4,opt,name=role,proto3,oneof" json:"role,omitempty"`
}

func (x *WorkspaceInviteUserRequest) Reset() {
	*x = WorkspaceInviteUserRequest{}
	mi := &file_workspace_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceInviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceInviteUserRequest) ProtoMessage() {}

func (x *WorkspaceInviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceInviteUserRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceInviteUserRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{19}
}

func (x *WorkspaceInviteUserRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (m *WorkspaceInviteUserRequest) GetUser() isWorkspaceInviteUserRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (x *WorkspaceInviteUserRequest) GetUserId() string {
	if x, ok := x.GetUser().(*WorkspaceInviteUserRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *WorkspaceInviteUserRequest) GetEmail() string {
	if x, ok := x.GetUser().(*WorkspaceInviteUserRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *WorkspaceInviteUserRequest) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

type isWorkspaceInviteUserRequest_User interface {
	isWorkspaceInviteUserRequest_User()
}

type WorkspaceInviteUserRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type WorkspaceInviteUserRequest_Email struct {
	Email string `protobuf:"bytes,3,opt,name=email,proto3,oneof"`
}

func (*WorkspaceInviteUserRequest_UserId) isWorkspaceInviteUserRequest_User() {}

func (*WorkspaceInviteUserRequest_Email) isWorkspaceInviteUserRequest_User() {}

type WorkspaceInviteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceUser *WorkspaceUser        `protobuf:"bytes,1,opt,name=workspace_user,json=workspaceUser,proto3,oneof" json:"workspace_user,omitempty"`
	Error         *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceInviteUserResponse) Reset() {
	*x = WorkspaceInviteUserResponse{}
	mi := &file_workspace_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceInviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceInviteUserResponse) ProtoMessage() {}

func (x *WorkspaceInviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceInviteUserResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceInviteUserResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{20}
}

func (x *WorkspaceInviteUserResponse) GetWorkspaceUser() *WorkspaceUser {
	if x != nil {
		return x.WorkspaceUser
	}
	return nil
}

func (x *WorkspaceInviteUserResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceUserListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId *string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
}

func (x *WorkspaceUserListRequest) Reset() {
	*x = WorkspaceUserListRequest{}
	mi := &file_workspace_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserListRequest) ProtoMessage() {}

func (x *WorkspaceUserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserListRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceUserListRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{21}
}

func (x *WorkspaceUserListRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

type WorkspaceUserListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceUsers []*WorkspaceUser      `protobuf:"bytes,1,rep,name=workspace_users,json=workspaceUsers,proto3" json:"workspace_users,omitempty"`
	Error          *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceUserListResponse) Reset() {
	*x = WorkspaceUserListResponse{}
	mi := &file_workspace_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUserListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserListResponse) ProtoMessage() {}

func (x *WorkspaceUserListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserListResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceUserListResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{22}
}

func (x *WorkspaceUserListResponse) GetWorkspaceUsers() []*WorkspaceUser {
	if x != nil {
		return x.WorkspaceUsers
	}
	return nil
}

func (x *WorkspaceUserListResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceUserGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	WorkspaceId *string `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
}

func (x *WorkspaceUserGetRequest) Reset() {
	*x = WorkspaceUserGetRequest{}
	mi := &file_workspace_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUserGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserGetRequest) ProtoMessage() {}

func (x *WorkspaceUserGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserGetRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceUserGetRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{23}
}

func (x *WorkspaceUserGetRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *WorkspaceUserGetRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

type WorkspaceUserGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceUser *WorkspaceUser        `protobuf:"bytes,1,opt,name=workspace_user,json=workspaceUser,proto3,oneof" json:"workspace_user,omitempty"`
	Error         *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceUserGetResponse) Reset() {
	*x = WorkspaceUserGetResponse{}
	mi := &file_workspace_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUserGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserGetResponse) ProtoMessage() {}

func (x *WorkspaceUserGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserGetResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceUserGetResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{24}
}

func (x *WorkspaceUserGetResponse) GetWorkspaceUser() *WorkspaceUser {
	if x != nil {
		return x.WorkspaceUser
	}
	return nil
}

func (x *WorkspaceUserGetResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceUserUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        *string              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	WorkspaceId   *string              `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	WorkspaceUser *WorkspaceUserUpdate `protobuf:"bytes,3,opt,name=workspace_user,json=workspaceUser,proto3,oneof" json:"workspace_user,omitempty"`
}

func (x *WorkspaceUserUpdateRequest) Reset() {
	*x = WorkspaceUserUpdateRequest{}
	mi := &file_workspace_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUserUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserUpdateRequest) ProtoMessage() {}

func (x *WorkspaceUserUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserUpdateRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceUserUpdateRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{25}
}

func (x *WorkspaceUserUpdateRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *WorkspaceUserUpdateRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *WorkspaceUserUpdateRequest) GetWorkspaceUser() *WorkspaceUserUpdate {
	if x != nil {
		return x.WorkspaceUser
	}
	return nil
}

type WorkspaceUserUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceUser *WorkspaceUser        `protobuf:"bytes,1,opt,name=workspace_user,json=workspaceUser,proto3,oneof" json:"workspace_user,omitempty"`
	Error         *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceUserUpdateResponse) Reset() {
	*x = WorkspaceUserUpdateResponse{}
	mi := &file_workspace_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUserUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserUpdateResponse) ProtoMessage() {}

func (x *WorkspaceUserUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserUpdateResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceUserUpdateResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{26}
}

func (x *WorkspaceUserUpdateResponse) GetWorkspaceUser() *WorkspaceUser {
	if x != nil {
		return x.WorkspaceUser
	}
	return nil
}

func (x *WorkspaceUserUpdateResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceUserDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	WorkspaceId *string `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
}

func (x *WorkspaceUserDeleteRequest) Reset() {
	*x = WorkspaceUserDeleteRequest{}
	mi := &file_workspace_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUserDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserDeleteRequest) ProtoMessage() {}

func (x *WorkspaceUserDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserDeleteRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceUserDeleteRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{27}
}

func (x *WorkspaceUserDeleteRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *WorkspaceUserDeleteRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

type WorkspaceUserDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *errors.ErrorResponse `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceUserDeleteResponse) Reset() {
	*x = WorkspaceUserDeleteResponse{}
	mi := &file_workspace_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceUserDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserDeleteResponse) ProtoMessage() {}

func (x *WorkspaceUserDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserDeleteResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceUserDeleteResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{28}
}

func (x *WorkspaceUserDeleteResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspacePluginCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId *string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	Payload     *string `protobuf:"bytes,2,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	IsPublic    *bool   `protobuf:"varint,3,opt,name=is_public,json=isPublic,proto3,oneof" json:"is_public,omitempty"`
}

func (x *WorkspacePluginCreateRequest) Reset() {
	*x = WorkspacePluginCreateRequest{}
	mi := &file_workspace_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginCreateRequest) ProtoMessage() {}

func (x *WorkspacePluginCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginCreateRequest.ProtoReflect.Descriptor instead.
func (*WorkspacePluginCreateRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{29}
}

func (x *WorkspacePluginCreateRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *WorkspacePluginCreateRequest) GetPayload() string {
	if x != nil && x.Payload != nil {
		return *x.Payload
	}
	return ""
}

func (x *WorkspacePluginCreateRequest) GetIsPublic() bool {
	if x != nil && x.IsPublic != nil {
		return *x.IsPublic
	}
	return false
}

type WorkspacePluginCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspacePlugin *WorkspacePlugin      `protobuf:"bytes,1,opt,name=workspace_plugin,json=workspacePlugin,proto3,oneof" json:"workspace_plugin,omitempty"`
	Error           *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspacePluginCreateResponse) Reset() {
	*x = WorkspacePluginCreateResponse{}
	mi := &file_workspace_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginCreateResponse) ProtoMessage() {}

func (x *WorkspacePluginCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginCreateResponse.ProtoReflect.Descriptor instead.
func (*WorkspacePluginCreateResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{30}
}

func (x *WorkspacePluginCreateResponse) GetWorkspacePlugin() *WorkspacePlugin {
	if x != nil {
		return x.WorkspacePlugin
	}
	return nil
}

func (x *WorkspacePluginCreateResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspacePluginGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId *string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	PluginId    *string `protobuf:"bytes,2,opt,name=plugin_id,json=pluginId,proto3,oneof" json:"plugin_id,omitempty"`
}

func (x *WorkspacePluginGetRequest) Reset() {
	*x = WorkspacePluginGetRequest{}
	mi := &file_workspace_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginGetRequest) ProtoMessage() {}

func (x *WorkspacePluginGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginGetRequest.ProtoReflect.Descriptor instead.
func (*WorkspacePluginGetRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{31}
}

func (x *WorkspacePluginGetRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *WorkspacePluginGetRequest) GetPluginId() string {
	if x != nil && x.PluginId != nil {
		return *x.PluginId
	}
	return ""
}

type WorkspacePluginGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspacePlugin *WorkspacePlugin      `protobuf:"bytes,1,opt,name=workspace_plugin,json=workspacePlugin,proto3,oneof" json:"workspace_plugin,omitempty"`
	Error           *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspacePluginGetResponse) Reset() {
	*x = WorkspacePluginGetResponse{}
	mi := &file_workspace_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginGetResponse) ProtoMessage() {}

func (x *WorkspacePluginGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginGetResponse.ProtoReflect.Descriptor instead.
func (*WorkspacePluginGetResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{32}
}

func (x *WorkspacePluginGetResponse) GetWorkspacePlugin() *WorkspacePlugin {
	if x != nil {
		return x.WorkspacePlugin
	}
	return nil
}

func (x *WorkspacePluginGetResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspacePluginListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId *string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
}

func (x *WorkspacePluginListRequest) Reset() {
	*x = WorkspacePluginListRequest{}
	mi := &file_workspace_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginListRequest) ProtoMessage() {}

func (x *WorkspacePluginListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginListRequest.ProtoReflect.Descriptor instead.
func (*WorkspacePluginListRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{33}
}

func (x *WorkspacePluginListRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

type WorkspacePluginListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspacePlugins []*WorkspacePlugin    `protobuf:"bytes,1,rep,name=workspace_plugins,json=workspacePlugins,proto3" json:"workspace_plugins,omitempty"`
	Error            *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspacePluginListResponse) Reset() {
	*x = WorkspacePluginListResponse{}
	mi := &file_workspace_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginListResponse) ProtoMessage() {}

func (x *WorkspacePluginListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginListResponse.ProtoReflect.Descriptor instead.
func (*WorkspacePluginListResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{34}
}

func (x *WorkspacePluginListResponse) GetWorkspacePlugins() []*WorkspacePlugin {
	if x != nil {
		return x.WorkspacePlugins
	}
	return nil
}

func (x *WorkspacePluginListResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspacePluginUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId     *string                `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	PluginId        *string                `protobuf:"bytes,2,opt,name=plugin_id,json=pluginId,proto3,oneof" json:"plugin_id,omitempty"`
	WorkspacePlugin *WorkspacePluginUpdate `protobuf:"bytes,3,opt,name=workspace_plugin,json=workspacePlugin,proto3,oneof" json:"workspace_plugin,omitempty"`
}

func (x *WorkspacePluginUpdateRequest) Reset() {
	*x = WorkspacePluginUpdateRequest{}
	mi := &file_workspace_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginUpdateRequest) ProtoMessage() {}

func (x *WorkspacePluginUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginUpdateRequest.ProtoReflect.Descriptor instead.
func (*WorkspacePluginUpdateRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{35}
}

func (x *WorkspacePluginUpdateRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *WorkspacePluginUpdateRequest) GetPluginId() string {
	if x != nil && x.PluginId != nil {
		return *x.PluginId
	}
	return ""
}

func (x *WorkspacePluginUpdateRequest) GetWorkspacePlugin() *WorkspacePluginUpdate {
	if x != nil {
		return x.WorkspacePlugin
	}
	return nil
}

type WorkspacePluginUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspacePlugin *WorkspacePlugin      `protobuf:"bytes,1,opt,name=workspace_plugin,json=workspacePlugin,proto3,oneof" json:"workspace_plugin,omitempty"`
	Error           *errors.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspacePluginUpdateResponse) Reset() {
	*x = WorkspacePluginUpdateResponse{}
	mi := &file_workspace_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginUpdateResponse) ProtoMessage() {}

func (x *WorkspacePluginUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginUpdateResponse.ProtoReflect.Descriptor instead.
func (*WorkspacePluginUpdateResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{36}
}

func (x *WorkspacePluginUpdateResponse) GetWorkspacePlugin() *WorkspacePlugin {
	if x != nil {
		return x.WorkspacePlugin
	}
	return nil
}

func (x *WorkspacePluginUpdateResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspacePluginDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId *string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	PluginId    *string `protobuf:"bytes,2,opt,name=plugin_id,json=pluginId,proto3,oneof" json:"plugin_id,omitempty"`
}

func (x *WorkspacePluginDeleteRequest) Reset() {
	*x = WorkspacePluginDeleteRequest{}
	mi := &file_workspace_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginDeleteRequest) ProtoMessage() {}

func (x *WorkspacePluginDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginDeleteRequest.ProtoReflect.Descriptor instead.
func (*WorkspacePluginDeleteRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{37}
}

func (x *WorkspacePluginDeleteRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *WorkspacePluginDeleteRequest) GetPluginId() string {
	if x != nil && x.PluginId != nil {
		return *x.PluginId
	}
	return ""
}

type WorkspacePluginDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *errors.ErrorResponse `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspacePluginDeleteResponse) Reset() {
	*x = WorkspacePluginDeleteResponse{}
	mi := &file_workspace_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspacePluginDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspacePluginDeleteResponse) ProtoMessage() {}

func (x *WorkspacePluginDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspacePluginDeleteResponse.ProtoReflect.Descriptor instead.
func (*WorkspacePluginDeleteResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{38}
}

func (x *WorkspacePluginDeleteResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkspaceWipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId *string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
}

func (x *WorkspaceWipeRequest) Reset() {
	*x = WorkspaceWipeRequest{}
	mi := &file_workspace_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceWipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceWipeRequest) ProtoMessage() {}

func (x *WorkspaceWipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceWipeRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceWipeRequest) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{39}
}

func (x *WorkspaceWipeRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

type WorkspaceWipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *errors.ErrorResponse `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkspaceWipeResponse) Reset() {
	*x = WorkspaceWipeResponse{}
	mi := &file_workspace_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceWipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceWipeResponse) ProtoMessage() {}

func (x *WorkspaceWipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceWipeResponse.ProtoReflect.Descriptor instead.
func (*WorkspaceWipeResponse) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{40}
}

func (x *WorkspaceWipeResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_workspace_proto protoreflect.FileDescriptor

var file_workspace_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x0e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x05, 0x0a, 0x09, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x66, 0x61, 0x76, 0x49, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x6f, 0x67,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f,
	0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x73, 0x6d, 0x61, 0x6c,
	0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0e, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x65, 0x72, 0x74, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0d, 0x74, 0x65, 0x72, 0x74,
	0x69, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x10, 0x74, 0x65, 0x78, 0x74,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x35, 0x0a, 0x14, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x12, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x0a, 0x69,
	0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0b, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x61, 0x76, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x65, 0x72, 0x74, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x22, 0xd5, 0x04, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x66, 0x61, 0x76, 0x49, 0x63, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x4c,
	0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f,
	0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x73, 0x6d,
	0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x0e, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x65, 0x72, 0x74, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0d, 0x74, 0x65,
	0x72, 0x74, 0x69, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x31,
	0x0a, 0x12, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x10, 0x74, 0x65,
	0x78, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x35, 0x0a, 0x14, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52,
	0x0a, 0x69, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x61, 0x76, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f,
	0x67, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x65, 0x72,
	0x74, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x9d, 0x04, 0x0a, 0x0f,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x66, 0x61,
	0x76, 0x49, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09,
	0x6c, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x09, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x65, 0x72, 0x74,
	0x69, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x0d, 0x74, 0x65, 0x72, 0x74, 0x69, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x07, 0x52, 0x10, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x61, 0x76, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f,
	0x67, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x65, 0x72,
	0x74, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xef, 0x02, 0x0a, 0x0d,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xfa, 0x42, 0x18, 0x72, 0x16, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x48, 0x02, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xfa,
	0x42, 0x1d, 0x72, 0x1b, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x07, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x64, 0x52, 0x08, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x48,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x05, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x22, 0x9e, 0x01,
	0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1b, 0xfa, 0x42, 0x18, 0x72, 0x16, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xfa, 0x42, 0x1d,
	0x72, 0x1b, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x64, 0x52, 0x08, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x48, 0x01, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x88,
	0x02, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x48, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x08, 0x69, 0x73, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x72, 0x0a, 0x15, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x4a, 0x0a,
	0x14, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x51, 0x0a, 0x1b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x1c, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x16,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3f,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x01, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x17, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x13, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x00, 0x52, 0x09, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x3d, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x01, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x9c,
	0x01, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x48, 0x00, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8f, 0x01,
	0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x48, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22,
	0x55, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xec, 0x01, 0x0a, 0x1a, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x60, 0x01, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xfa, 0x42, 0x18,
	0x72, 0x16, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x02, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x1b, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5d, 0x0a, 0x18, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x19, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x01, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x18, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf2, 0x01, 0x0a, 0x1a,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x48, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x02, 0x52, 0x0d,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x22, 0xb2, 0x01, 0x0a, 0x1b, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0c,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x01, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x1b, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xbc, 0x01, 0x0a, 0x1c, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x08, 0x69,
	0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0xbc, 0x01, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52,
	0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x19, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x48, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x22,
	0xb9, 0x01, 0x0a, 0x1a, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5f, 0x0a, 0x1a, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xa2, 0x01, 0x0a,
	0x1b, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x82, 0x02, 0x0a, 0x1c, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x48, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x50, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x02, 0x52, 0x0f,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x48, 0x00,
	0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x1c, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x59, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x57, 0x69, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x57, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a,
	0x75, 0x70, 0x79, 0x74, 0x65, 0x72, 0x2d, 0x6e, 0x61, 0x61, 0x73, 0x2f, 0x6e, 0x61, 0x61, 0x73,
	0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workspace_proto_rawDescOnce sync.Once
	file_workspace_proto_rawDescData = file_workspace_proto_rawDesc
)

func file_workspace_proto_rawDescGZIP() []byte {
	file_workspace_proto_rawDescOnce.Do(func() {
		file_workspace_proto_rawDescData = protoimpl.X.CompressGZIP(file_workspace_proto_rawDescData)
	})
	return file_workspace_proto_rawDescData
}

var file_workspace_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_workspace_proto_goTypes = []any{
	(*Workspace)(nil),                     // 0: workspace.Workspace
	(*WorkspaceCreation)(nil),             // 1: workspace.WorkspaceCreation
	(*WorkspaceUpdate)(nil),               // 2: workspace.WorkspaceUpdate
	(*WorkspaceUser)(nil),                 // 3: workspace.WorkspaceUser
	(*WorkspaceUserUpdate)(nil),           // 4: workspace.WorkspaceUserUpdate
	(*WorkspacePlugin)(nil),               // 5: workspace.WorkspacePlugin
	(*WorkspacePluginUpdate)(nil),         // 6: workspace.WorkspacePluginUpdate
	(*WorkspaceListRequest)(nil),          // 7: workspace.WorkspaceListRequest
	(*WorkspaceListResponse)(nil),         // 8: workspace.WorkspaceListResponse
	(*InvitedWorkspaceListRequest)(nil),   // 9: workspace.InvitedWorkspaceListRequest
	(*InvitedWorkspaceListResponse)(nil),  // 10: workspace.InvitedWorkspaceListResponse
	(*WorkspaceCreateRequest)(nil),        // 11: workspace.WorkspaceCreateRequest
	(*WorkspaceCreateResponse)(nil),       // 12: workspace.WorkspaceCreateResponse
	(*WorkspaceGetRequest)(nil),           // 13: workspace.WorkspaceGetRequest
	(*WorkspaceGetResponse)(nil),          // 14: workspace.WorkspaceGetResponse
	(*WorkspaceUpdateRequest)(nil),        // 15: workspace.WorkspaceUpdateRequest
	(*WorkspaceUpdateResponse)(nil),       // 16: workspace.WorkspaceUpdateResponse
	(*WorkspaceDeleteRequest)(nil),        // 17: workspace.WorkspaceDeleteRequest
	(*WorkspaceDeleteResponse)(nil),       // 18: workspace.WorkspaceDeleteResponse
	(*WorkspaceInviteUserRequest)(nil),    // 19: workspace.WorkspaceInviteUserRequest
	(*WorkspaceInviteUserResponse)(nil),   // 20: workspace.WorkspaceInviteUserResponse
	(*WorkspaceUserListRequest)(nil),      // 21: workspace.WorkspaceUserListRequest
	(*WorkspaceUserListResponse)(nil),     // 22: workspace.WorkspaceUserListResponse
	(*WorkspaceUserGetRequest)(nil),       // 23: workspace.WorkspaceUserGetRequest
	(*WorkspaceUserGetResponse)(nil),      // 24: workspace.WorkspaceUserGetResponse
	(*WorkspaceUserUpdateRequest)(nil),    // 25: workspace.WorkspaceUserUpdateRequest
	(*WorkspaceUserUpdateResponse)(nil),   // 26: workspace.WorkspaceUserUpdateResponse
	(*WorkspaceUserDeleteRequest)(nil),    // 27: workspace.WorkspaceUserDeleteRequest
	(*WorkspaceUserDeleteResponse)(nil),   // 28: workspace.WorkspaceUserDeleteResponse
	(*WorkspacePluginCreateRequest)(nil),  // 29: workspace.WorkspacePluginCreateRequest
	(*WorkspacePluginCreateResponse)(nil), // 30: workspace.WorkspacePluginCreateResponse
	(*WorkspacePluginGetRequest)(nil),     // 31: workspace.WorkspacePluginGetRequest
	(*WorkspacePluginGetResponse)(nil),    // 32: workspace.WorkspacePluginGetResponse
	(*WorkspacePluginListRequest)(nil),    // 33: workspace.WorkspacePluginListRequest
	(*WorkspacePluginListResponse)(nil),   // 34: workspace.WorkspacePluginListResponse
	(*WorkspacePluginUpdateRequest)(nil),  // 35: workspace.WorkspacePluginUpdateRequest
	(*WorkspacePluginUpdateResponse)(nil), // 36: workspace.WorkspacePluginUpdateResponse
	(*WorkspacePluginDeleteRequest)(nil),  // 37: workspace.WorkspacePluginDeleteRequest
	(*WorkspacePluginDeleteResponse)(nil), // 38: workspace.WorkspacePluginDeleteResponse
	(*WorkspaceWipeRequest)(nil),          // 39: workspace.WorkspaceWipeRequest
	(*WorkspaceWipeResponse)(nil),         // 40: workspace.WorkspaceWipeResponse
	(*errors.ErrorResponse)(nil),          // 41: errors.ErrorResponse
}
var file_workspace_proto_depIdxs = []int32{
	0,  // 0: workspace.WorkspaceListResponse.workspaces:type_name -> workspace.Workspace
	41, // 1: workspace.WorkspaceListResponse.error:type_name -> errors.ErrorResponse
	0,  // 2: workspace.InvitedWorkspaceListResponse.workspaces:type_name -> workspace.Workspace
	41, // 3: workspace.InvitedWorkspaceListResponse.error:type_name -> errors.ErrorResponse
	1,  // 4: workspace.WorkspaceCreateRequest.workspace:type_name -> workspace.WorkspaceCreation
	0,  // 5: workspace.WorkspaceCreateResponse.workspace:type_name -> workspace.Workspace
	41, // 6: workspace.WorkspaceCreateResponse.error:type_name -> errors.ErrorResponse
	0,  // 7: workspace.WorkspaceGetResponse.workspace:type_name -> workspace.Workspace
	41, // 8: workspace.WorkspaceGetResponse.error:type_name -> errors.ErrorResponse
	2,  // 9: workspace.WorkspaceUpdateRequest.workspace:type_name -> workspace.WorkspaceUpdate
	0,  // 10: workspace.WorkspaceUpdateResponse.workspace:type_name -> workspace.Workspace
	41, // 11: workspace.WorkspaceUpdateResponse.error:type_name -> errors.ErrorResponse
	41, // 12: workspace.WorkspaceDeleteResponse.error:type_name -> errors.ErrorResponse
	3,  // 13: workspace.WorkspaceInviteUserResponse.workspace_user:type_name -> workspace.WorkspaceUser
	41, // 14: workspace.WorkspaceInviteUserResponse.error:type_name -> errors.ErrorResponse
	3,  // 15: workspace.WorkspaceUserListResponse.workspace_users:type_name -> workspace.WorkspaceUser
	41, // 16: workspace.WorkspaceUserListResponse.error:type_name -> errors.ErrorResponse
	3,  // 17: workspace.WorkspaceUserGetResponse.workspace_user:type_name -> workspace.WorkspaceUser
	41, // 18: workspace.WorkspaceUserGetResponse.error:type_name -> errors.ErrorResponse
	4,  // 19: workspace.WorkspaceUserUpdateRequest.workspace_user:type_name -> workspace.WorkspaceUserUpdate
	3,  // 20: workspace.WorkspaceUserUpdateResponse.workspace_user:type_name -> workspace.WorkspaceUser
	41, // 21: workspace.WorkspaceUserUpdateResponse.error:type_name -> errors.ErrorResponse
	41, // 22: workspace.WorkspaceUserDeleteResponse.error:type_name -> errors.ErrorResponse
	5,  // 23: workspace.WorkspacePluginCreateResponse.workspace_plugin:type_name -> workspace.WorkspacePlugin
	41, // 24: workspace.WorkspacePluginCreateResponse.error:type_name -> errors.ErrorResponse
	5,  // 25: workspace.WorkspacePluginGetResponse.workspace_plugin:type_name -> workspace.WorkspacePlugin
	41, // 26: workspace.WorkspacePluginGetResponse.error:type_name -> errors.ErrorResponse
	5,  // 27: workspace.WorkspacePluginListResponse.workspace_plugins:type_name -> workspace.WorkspacePlugin
	41, // 28: workspace.WorkspacePluginListResponse.error:type_name -> errors.ErrorResponse
	6,  // 29: workspace.WorkspacePluginUpdateRequest.workspace_plugin:type_name -> workspace.WorkspacePluginUpdate
	5,  // 30: workspace.WorkspacePluginUpdateResponse.workspace_plugin:type_name -> workspace.WorkspacePlugin
	41, // 31: workspace.WorkspacePluginUpdateResponse.error:type_name -> errors.ErrorResponse
	41, // 32: workspace.WorkspacePluginDeleteResponse.error:type_name -> errors.ErrorResponse
	41, // 33: workspace.WorkspaceWipeResponse.error:type_name -> errors.ErrorResponse
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_workspace_proto_init() }
func file_workspace_proto_init() {
	if File_workspace_proto != nil {
		return
	}
	file_workspace_proto_msgTypes[0].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[1].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[2].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[3].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[4].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[5].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[6].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[7].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[8].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[9].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[10].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[11].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[12].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[13].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[14].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[15].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[16].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[17].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[18].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[19].OneofWrappers = []any{
		(*WorkspaceInviteUserRequest_UserId)(nil),
		(*WorkspaceInviteUserRequest_Email)(nil),
	}
	file_workspace_proto_msgTypes[20].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[21].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[22].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[23].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[24].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[25].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[26].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[27].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[28].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[29].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[30].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[31].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[32].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[33].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[34].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[35].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[36].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[37].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[38].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[39].OneofWrappers = []any{}
	file_workspace_proto_msgTypes[40].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workspace_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_workspace_proto_goTypes,
		DependencyIndexes: file_workspace_proto_depIdxs,
		MessageInfos:      file_workspace_proto_msgTypes,
	}.Build()
	File_workspace_proto = out.File
	file_workspace_proto_rawDesc = nil
	file_workspace_proto_goTypes = nil
	file_workspace_proto_depIdxs = nil
}
