// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.1
// source: ontology.proto

package ontology

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	common "github.com/jupyter-naas/naas-models/go/common"
	errors "github.com/jupyter-naas/naas-models/go/errors"
	_ "github.com/jupyter-naas/naas-models/go/p2p_validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ontology struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId   *string                `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	Label         *string                `protobuf:"bytes,3,opt,name=label,proto3,oneof" json:"label,omitempty"`
	Source        *string                `protobuf:"bytes,4,opt,name=source,proto3,oneof" json:"source,omitempty"`
	DownloadUrl   *string                `protobuf:"bytes,5,opt,name=download_url,json=downloadUrl,proto3,oneof" json:"download_url,omitempty"`
	Description   *string                `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
	LogoUrl       *string                `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3,oneof" json:"logo_url,omitempty"`
	Level         *string                `protobuf:"bytes,8,opt,name=level,proto3,oneof" json:"level,omitempty"`
	IsPublic      *bool                  `protobuf:"varint,9,opt,name=is_public,json=isPublic,proto3,oneof" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ontology) Reset() {
	*x = Ontology{}
	mi := &file_ontology_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ontology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ontology) ProtoMessage() {}

func (x *Ontology) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ontology.ProtoReflect.Descriptor instead.
func (*Ontology) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{0}
}

func (x *Ontology) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ontology) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *Ontology) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *Ontology) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *Ontology) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *Ontology) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Ontology) GetLogoUrl() string {
	if x != nil && x.LogoUrl != nil {
		return *x.LogoUrl
	}
	return ""
}

func (x *Ontology) GetLevel() string {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ""
}

func (x *Ontology) GetIsPublic() bool {
	if x != nil && x.IsPublic != nil {
		return *x.IsPublic
	}
	return false
}

type OntologySummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId   *string                `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	Label         *string                `protobuf:"bytes,3,opt,name=label,proto3,oneof" json:"label,omitempty"`
	DownloadUrl   *string                `protobuf:"bytes,4,opt,name=download_url,json=downloadUrl,proto3,oneof" json:"download_url,omitempty"`
	Description   *string                `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	LogoUrl       *string                `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl,proto3,oneof" json:"logo_url,omitempty"`
	Level         *string                `protobuf:"bytes,7,opt,name=level,proto3,oneof" json:"level,omitempty"`
	IsPublic      *bool                  `protobuf:"varint,8,opt,name=is_public,json=isPublic,proto3,oneof" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologySummary) Reset() {
	*x = OntologySummary{}
	mi := &file_ontology_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologySummary) ProtoMessage() {}

func (x *OntologySummary) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologySummary.ProtoReflect.Descriptor instead.
func (*OntologySummary) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{1}
}

func (x *OntologySummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OntologySummary) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *OntologySummary) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *OntologySummary) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *OntologySummary) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *OntologySummary) GetLogoUrl() string {
	if x != nil && x.LogoUrl != nil {
		return *x.LogoUrl
	}
	return ""
}

func (x *OntologySummary) GetLevel() string {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ""
}

func (x *OntologySummary) GetIsPublic() bool {
	if x != nil && x.IsPublic != nil {
		return *x.IsPublic
	}
	return false
}

type OntologyCreation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	DownloadUrl   *string                `protobuf:"bytes,4,opt,name=download_url,json=downloadUrl,proto3,oneof" json:"download_url,omitempty"`
	Description   *string                `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	LogoUrl       *string                `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl,proto3,oneof" json:"logo_url,omitempty"`
	Level         *string                `protobuf:"bytes,7,opt,name=level,proto3,oneof" json:"level,omitempty"`
	IsPublic      *bool                  `protobuf:"varint,8,opt,name=is_public,json=isPublic,proto3,oneof" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyCreation) Reset() {
	*x = OntologyCreation{}
	mi := &file_ontology_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyCreation) ProtoMessage() {}

func (x *OntologyCreation) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyCreation.ProtoReflect.Descriptor instead.
func (*OntologyCreation) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{2}
}

func (x *OntologyCreation) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *OntologyCreation) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *OntologyCreation) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *OntologyCreation) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *OntologyCreation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *OntologyCreation) GetLogoUrl() string {
	if x != nil && x.LogoUrl != nil {
		return *x.LogoUrl
	}
	return ""
}

func (x *OntologyCreation) GetLevel() string {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ""
}

func (x *OntologyCreation) GetIsPublic() bool {
	if x != nil && x.IsPublic != nil {
		return *x.IsPublic
	}
	return false
}

type OntologyUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId   *string                `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	Label         *string                `protobuf:"bytes,3,opt,name=label,proto3,oneof" json:"label,omitempty"`
	Source        *string                `protobuf:"bytes,4,opt,name=source,proto3,oneof" json:"source,omitempty"`
	DownloadUrl   *string                `protobuf:"bytes,5,opt,name=download_url,json=downloadUrl,proto3,oneof" json:"download_url,omitempty"`
	Description   *string                `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
	LogoUrl       *string                `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3,oneof" json:"logo_url,omitempty"`
	Level         *string                `protobuf:"bytes,8,opt,name=level,proto3,oneof" json:"level,omitempty"`
	IsPublic      *bool                  `protobuf:"varint,9,opt,name=is_public,json=isPublic,proto3,oneof" json:"is_public,omitempty"`
	FieldMask     *common.FieldMask      `protobuf:"bytes,100,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyUpdate) Reset() {
	*x = OntologyUpdate{}
	mi := &file_ontology_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyUpdate) ProtoMessage() {}

func (x *OntologyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyUpdate.ProtoReflect.Descriptor instead.
func (*OntologyUpdate) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{3}
}

func (x *OntologyUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OntologyUpdate) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *OntologyUpdate) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *OntologyUpdate) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *OntologyUpdate) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *OntologyUpdate) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *OntologyUpdate) GetLogoUrl() string {
	if x != nil && x.LogoUrl != nil {
		return *x.LogoUrl
	}
	return ""
}

func (x *OntologyUpdate) GetLevel() string {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ""
}

func (x *OntologyUpdate) GetIsPublic() bool {
	if x != nil && x.IsPublic != nil {
		return *x.IsPublic
	}
	return false
}

func (x *OntologyUpdate) GetFieldMask() *common.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type OntologyListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyListRequest) Reset() {
	*x = OntologyListRequest{}
	mi := &file_ontology_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyListRequest) ProtoMessage() {}

func (x *OntologyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyListRequest.ProtoReflect.Descriptor instead.
func (*OntologyListRequest) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{4}
}

func (x *OntologyListRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *OntologyListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OntologyListRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type OntologyListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *errors.ErrorResponse  `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Ontologies    []*OntologySummary     `protobuf:"bytes,2,rep,name=ontologies,proto3" json:"ontologies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyListResponse) Reset() {
	*x = OntologyListResponse{}
	mi := &file_ontology_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyListResponse) ProtoMessage() {}

func (x *OntologyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyListResponse.ProtoReflect.Descriptor instead.
func (*OntologyListResponse) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{5}
}

func (x *OntologyListResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OntologyListResponse) GetOntologies() []*OntologySummary {
	if x != nil {
		return x.Ontologies
	}
	return nil
}

type OntologyGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId   *string                `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyGetRequest) Reset() {
	*x = OntologyGetRequest{}
	mi := &file_ontology_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyGetRequest) ProtoMessage() {}

func (x *OntologyGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyGetRequest.ProtoReflect.Descriptor instead.
func (*OntologyGetRequest) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{6}
}

func (x *OntologyGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OntologyGetRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

type OntologyGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *errors.ErrorResponse  `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Ontology      *Ontology              `protobuf:"bytes,2,opt,name=ontology,proto3,oneof" json:"ontology,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyGetResponse) Reset() {
	*x = OntologyGetResponse{}
	mi := &file_ontology_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyGetResponse) ProtoMessage() {}

func (x *OntologyGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyGetResponse.ProtoReflect.Descriptor instead.
func (*OntologyGetResponse) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{7}
}

func (x *OntologyGetResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OntologyGetResponse) GetOntology() *Ontology {
	if x != nil {
		return x.Ontology
	}
	return nil
}

type OntologyCreationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ontology      *OntologyCreation      `protobuf:"bytes,1,opt,name=ontology,proto3" json:"ontology,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyCreationRequest) Reset() {
	*x = OntologyCreationRequest{}
	mi := &file_ontology_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyCreationRequest) ProtoMessage() {}

func (x *OntologyCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyCreationRequest.ProtoReflect.Descriptor instead.
func (*OntologyCreationRequest) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{8}
}

func (x *OntologyCreationRequest) GetOntology() *OntologyCreation {
	if x != nil {
		return x.Ontology
	}
	return nil
}

type OntologyCreationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *errors.ErrorResponse  `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Ontology      *Ontology              `protobuf:"bytes,2,opt,name=ontology,proto3,oneof" json:"ontology,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyCreationResponse) Reset() {
	*x = OntologyCreationResponse{}
	mi := &file_ontology_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyCreationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyCreationResponse) ProtoMessage() {}

func (x *OntologyCreationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyCreationResponse.ProtoReflect.Descriptor instead.
func (*OntologyCreationResponse) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{9}
}

func (x *OntologyCreationResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OntologyCreationResponse) GetOntology() *Ontology {
	if x != nil {
		return x.Ontology
	}
	return nil
}

type OntologyUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ontology      *OntologyUpdate        `protobuf:"bytes,1,opt,name=ontology,proto3" json:"ontology,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyUpdateRequest) Reset() {
	*x = OntologyUpdateRequest{}
	mi := &file_ontology_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyUpdateRequest) ProtoMessage() {}

func (x *OntologyUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyUpdateRequest.ProtoReflect.Descriptor instead.
func (*OntologyUpdateRequest) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{10}
}

func (x *OntologyUpdateRequest) GetOntology() *OntologyUpdate {
	if x != nil {
		return x.Ontology
	}
	return nil
}

type OntologyUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *errors.ErrorResponse  `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Ontology      *Ontology              `protobuf:"bytes,2,opt,name=ontology,proto3,oneof" json:"ontology,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyUpdateResponse) Reset() {
	*x = OntologyUpdateResponse{}
	mi := &file_ontology_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyUpdateResponse) ProtoMessage() {}

func (x *OntologyUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyUpdateResponse.ProtoReflect.Descriptor instead.
func (*OntologyUpdateResponse) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{11}
}

func (x *OntologyUpdateResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OntologyUpdateResponse) GetOntology() *Ontology {
	if x != nil {
		return x.Ontology
	}
	return nil
}

type OntologyDeletionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId   string                 `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyDeletionRequest) Reset() {
	*x = OntologyDeletionRequest{}
	mi := &file_ontology_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyDeletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyDeletionRequest) ProtoMessage() {}

func (x *OntologyDeletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyDeletionRequest.ProtoReflect.Descriptor instead.
func (*OntologyDeletionRequest) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{12}
}

func (x *OntologyDeletionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OntologyDeletionRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type OntologyDeletionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *errors.ErrorResponse  `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OntologyDeletionResponse) Reset() {
	*x = OntologyDeletionResponse{}
	mi := &file_ontology_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OntologyDeletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OntologyDeletionResponse) ProtoMessage() {}

func (x *OntologyDeletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ontology_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OntologyDeletionResponse.ProtoReflect.Descriptor instead.
func (*OntologyDeletionResponse) Descriptor() ([]byte, []int) {
	return file_ontology_proto_rawDescGZIP(), []int{13}
}

func (x *OntologyDeletionResponse) GetError() *errors.ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_ontology_proto protoreflect.FileDescriptor

const file_ontology_proto_rawDesc = "" +
	"\n" +
	"\x0eontology.proto\x12\bontology\x1a\x0evalidate.proto\x1a\x12p2p_validate.proto\x1a\ferrors.proto\x1a\fcommon.proto\"\xa6\x03\n" +
	"\bOntology\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x02id\x120\n" +
	"\fworkspace_id\x18\x02 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01H\x00R\vworkspaceId\x88\x01\x01\x12\x19\n" +
	"\x05label\x18\x03 \x01(\tH\x01R\x05label\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x04 \x01(\tH\x02R\x06source\x88\x01\x01\x12&\n" +
	"\fdownload_url\x18\x05 \x01(\tH\x03R\vdownloadUrl\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x06 \x01(\tH\x04R\vdescription\x88\x01\x01\x12\x1e\n" +
	"\blogo_url\x18\a \x01(\tH\x05R\alogoUrl\x88\x01\x01\x12\x19\n" +
	"\x05level\x18\b \x01(\tH\x06R\x05level\x88\x01\x01\x12 \n" +
	"\tis_public\x18\t \x01(\bH\aR\bisPublic\x88\x01\x01B\x0f\n" +
	"\r_workspace_idB\b\n" +
	"\x06_labelB\t\n" +
	"\a_sourceB\x0f\n" +
	"\r_download_urlB\x0e\n" +
	"\f_descriptionB\v\n" +
	"\t_logo_urlB\b\n" +
	"\x06_levelB\f\n" +
	"\n" +
	"_is_public\"\x85\x03\n" +
	"\x0fOntologySummary\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x02id\x120\n" +
	"\fworkspace_id\x18\x02 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01H\x00R\vworkspaceId\x88\x01\x01\x12\x19\n" +
	"\x05label\x18\x03 \x01(\tH\x01R\x05label\x88\x01\x01\x12&\n" +
	"\fdownload_url\x18\x04 \x01(\tH\x02R\vdownloadUrl\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x05 \x01(\tH\x03R\vdescription\x88\x01\x01\x12\x1e\n" +
	"\blogo_url\x18\x06 \x01(\tH\x04R\alogoUrl\x88\x01\x01\x12\x19\n" +
	"\x05level\x18\a \x01(\tH\x05R\x05level\x88\x01\x01\x12 \n" +
	"\tis_public\x18\b \x01(\bH\x06R\bisPublic\x88\x01\x01B\x0f\n" +
	"\r_workspace_idB\b\n" +
	"\x06_labelB\x0f\n" +
	"\r_download_urlB\x0e\n" +
	"\f_descriptionB\v\n" +
	"\t_logo_urlB\b\n" +
	"\x06_levelB\f\n" +
	"\n" +
	"_is_public\"\x8c\x03\n" +
	"\x10OntologyCreation\x123\n" +
	"\fworkspace_id\x18\x01 \x01(\tB\x10\xfaB\x05r\x03\xb0\x01\x01\x8aC\x05r\x03\x98\x02\x01R\vworkspaceId\x12(\n" +
	"\x05label\x18\x02 \x01(\tB\x12\xfaB\ar\x05\x10\x01\x18\xff\x01\x8aC\x05r\x03\x98\x02\x01R\x05label\x12'\n" +
	"\x06source\x18\x03 \x01(\tB\x0f\xfaB\x04r\x02\x10\x01\x8aC\x05r\x03\x98\x02\x01R\x06source\x12&\n" +
	"\fdownload_url\x18\x04 \x01(\tH\x00R\vdownloadUrl\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x05 \x01(\tH\x01R\vdescription\x88\x01\x01\x12\x1e\n" +
	"\blogo_url\x18\x06 \x01(\tH\x02R\alogoUrl\x88\x01\x01\x12\x19\n" +
	"\x05level\x18\a \x01(\tH\x03R\x05level\x88\x01\x01\x12 \n" +
	"\tis_public\x18\b \x01(\bH\x04R\bisPublic\x88\x01\x01B\x0f\n" +
	"\r_download_urlB\x0e\n" +
	"\f_descriptionB\v\n" +
	"\t_logo_urlB\b\n" +
	"\x06_levelB\f\n" +
	"\n" +
	"_is_public\"\xe6\x03\n" +
	"\x0eOntologyUpdate\x12 \n" +
	"\x02id\x18\x01 \x01(\tB\x10\xfaB\x05r\x03\xb0\x01\x01\x8aC\x05r\x03\x98\x02\x01R\x02id\x120\n" +
	"\fworkspace_id\x18\x02 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01H\x00R\vworkspaceId\x88\x01\x01\x12\x19\n" +
	"\x05label\x18\x03 \x01(\tH\x01R\x05label\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x04 \x01(\tH\x02R\x06source\x88\x01\x01\x12&\n" +
	"\fdownload_url\x18\x05 \x01(\tH\x03R\vdownloadUrl\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x06 \x01(\tH\x04R\vdescription\x88\x01\x01\x12\x1e\n" +
	"\blogo_url\x18\a \x01(\tH\x05R\alogoUrl\x88\x01\x01\x12\x19\n" +
	"\x05level\x18\b \x01(\tH\x06R\x05level\x88\x01\x01\x12 \n" +
	"\tis_public\x18\t \x01(\bH\aR\bisPublic\x88\x01\x01\x120\n" +
	"\n" +
	"field_mask\x18d \x01(\v2\x11.common.FieldMaskR\tfieldMaskB\x0f\n" +
	"\r_workspace_idB\b\n" +
	"\x06_labelB\t\n" +
	"\a_sourceB\x0f\n" +
	"\r_download_urlB\x0e\n" +
	"\f_descriptionB\v\n" +
	"\t_logo_urlB\b\n" +
	"\x06_levelB\f\n" +
	"\n" +
	"_is_public\"\xac\x01\n" +
	"\x13OntologyListRequest\x123\n" +
	"\fworkspace_id\x18\x01 \x01(\tB\x10\xfaB\x05r\x03\xb0\x01\x01\x8aC\x05r\x03\x98\x02\x01R\vworkspaceId\x12.\n" +
	"\tpage_size\x18\x02 \x01(\x05B\x11\xfaB\x06\x1a\x04\x18d(\x01\x8aC\x05\x1a\x03\xa8\x01\x01R\bpageSize\x120\n" +
	"\vpage_number\x18\x03 \x01(\x05B\x0f\xfaB\x04\x1a\x02(\x00\x8aC\x05\x1a\x03\xa8\x01\x01R\n" +
	"pageNumber\"\x8d\x01\n" +
	"\x14OntologyListResponse\x120\n" +
	"\x05error\x18\x01 \x01(\v2\x15.errors.ErrorResponseH\x00R\x05error\x88\x01\x01\x129\n" +
	"\n" +
	"ontologies\x18\x02 \x03(\v2\x19.ontology.OntologySummaryR\n" +
	"ontologiesB\b\n" +
	"\x06_error\"q\n" +
	"\x12OntologyGetRequest\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x02id\x120\n" +
	"\fworkspace_id\x18\x02 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01H\x00R\vworkspaceId\x88\x01\x01B\x0f\n" +
	"\r_workspace_id\"\x93\x01\n" +
	"\x13OntologyGetResponse\x120\n" +
	"\x05error\x18\x01 \x01(\v2\x15.errors.ErrorResponseH\x00R\x05error\x88\x01\x01\x123\n" +
	"\bontology\x18\x02 \x01(\v2\x12.ontology.OntologyH\x01R\bontology\x88\x01\x01B\b\n" +
	"\x06_errorB\v\n" +
	"\t_ontology\"Q\n" +
	"\x17OntologyCreationRequest\x126\n" +
	"\bontology\x18\x01 \x01(\v2\x1a.ontology.OntologyCreationR\bontology\"\x98\x01\n" +
	"\x18OntologyCreationResponse\x120\n" +
	"\x05error\x18\x01 \x01(\v2\x15.errors.ErrorResponseH\x00R\x05error\x88\x01\x01\x123\n" +
	"\bontology\x18\x02 \x01(\v2\x12.ontology.OntologyH\x01R\bontology\x88\x01\x01B\b\n" +
	"\x06_errorB\v\n" +
	"\t_ontology\"M\n" +
	"\x15OntologyUpdateRequest\x124\n" +
	"\bontology\x18\x01 \x01(\v2\x18.ontology.OntologyUpdateR\bontology\"\x96\x01\n" +
	"\x16OntologyUpdateResponse\x120\n" +
	"\x05error\x18\x01 \x01(\v2\x15.errors.ErrorResponseH\x00R\x05error\x88\x01\x01\x123\n" +
	"\bontology\x18\x02 \x01(\v2\x12.ontology.OntologyH\x01R\bontology\x88\x01\x01B\b\n" +
	"\x06_errorB\v\n" +
	"\t_ontology\"`\n" +
	"\x17OntologyDeletionRequest\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x02id\x12+\n" +
	"\fworkspace_id\x18\x02 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\vworkspaceId\"V\n" +
	"\x18OntologyDeletionResponse\x120\n" +
	"\x05error\x18\x01 \x01(\v2\x15.errors.ErrorResponseH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error2\x95\x03\n" +
	"\x0fOntologyService\x12G\n" +
	"\x04List\x12\x1d.ontology.OntologyListRequest\x1a\x1e.ontology.OntologyListResponse\"\x00\x12D\n" +
	"\x03Get\x12\x1c.ontology.OntologyGetRequest\x1a\x1d.ontology.OntologyGetResponse\"\x00\x12Q\n" +
	"\x06Create\x12!.ontology.OntologyCreationRequest\x1a\".ontology.OntologyCreationResponse\"\x00\x12M\n" +
	"\x06Update\x12\x1f.ontology.OntologyUpdateRequest\x1a .ontology.OntologyUpdateResponse\"\x00\x12Q\n" +
	"\x06Delete\x12!.ontology.OntologyDeletionRequest\x1a\".ontology.OntologyDeletionResponse\"\x00B1Z/github.com/jupyter-naas/naas-models/go/ontologyb\x06proto3"

var (
	file_ontology_proto_rawDescOnce sync.Once
	file_ontology_proto_rawDescData []byte
)

func file_ontology_proto_rawDescGZIP() []byte {
	file_ontology_proto_rawDescOnce.Do(func() {
		file_ontology_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ontology_proto_rawDesc), len(file_ontology_proto_rawDesc)))
	})
	return file_ontology_proto_rawDescData
}

var file_ontology_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_ontology_proto_goTypes = []any{
	(*Ontology)(nil),                 // 0: ontology.Ontology
	(*OntologySummary)(nil),          // 1: ontology.OntologySummary
	(*OntologyCreation)(nil),         // 2: ontology.OntologyCreation
	(*OntologyUpdate)(nil),           // 3: ontology.OntologyUpdate
	(*OntologyListRequest)(nil),      // 4: ontology.OntologyListRequest
	(*OntologyListResponse)(nil),     // 5: ontology.OntologyListResponse
	(*OntologyGetRequest)(nil),       // 6: ontology.OntologyGetRequest
	(*OntologyGetResponse)(nil),      // 7: ontology.OntologyGetResponse
	(*OntologyCreationRequest)(nil),  // 8: ontology.OntologyCreationRequest
	(*OntologyCreationResponse)(nil), // 9: ontology.OntologyCreationResponse
	(*OntologyUpdateRequest)(nil),    // 10: ontology.OntologyUpdateRequest
	(*OntologyUpdateResponse)(nil),   // 11: ontology.OntologyUpdateResponse
	(*OntologyDeletionRequest)(nil),  // 12: ontology.OntologyDeletionRequest
	(*OntologyDeletionResponse)(nil), // 13: ontology.OntologyDeletionResponse
	(*common.FieldMask)(nil),         // 14: common.FieldMask
	(*errors.ErrorResponse)(nil),     // 15: errors.ErrorResponse
}
var file_ontology_proto_depIdxs = []int32{
	14, // 0: ontology.OntologyUpdate.field_mask:type_name -> common.FieldMask
	15, // 1: ontology.OntologyListResponse.error:type_name -> errors.ErrorResponse
	1,  // 2: ontology.OntologyListResponse.ontologies:type_name -> ontology.OntologySummary
	15, // 3: ontology.OntologyGetResponse.error:type_name -> errors.ErrorResponse
	0,  // 4: ontology.OntologyGetResponse.ontology:type_name -> ontology.Ontology
	2,  // 5: ontology.OntologyCreationRequest.ontology:type_name -> ontology.OntologyCreation
	15, // 6: ontology.OntologyCreationResponse.error:type_name -> errors.ErrorResponse
	0,  // 7: ontology.OntologyCreationResponse.ontology:type_name -> ontology.Ontology
	3,  // 8: ontology.OntologyUpdateRequest.ontology:type_name -> ontology.OntologyUpdate
	15, // 9: ontology.OntologyUpdateResponse.error:type_name -> errors.ErrorResponse
	0,  // 10: ontology.OntologyUpdateResponse.ontology:type_name -> ontology.Ontology
	15, // 11: ontology.OntologyDeletionResponse.error:type_name -> errors.ErrorResponse
	4,  // 12: ontology.OntologyService.List:input_type -> ontology.OntologyListRequest
	6,  // 13: ontology.OntologyService.Get:input_type -> ontology.OntologyGetRequest
	8,  // 14: ontology.OntologyService.Create:input_type -> ontology.OntologyCreationRequest
	10, // 15: ontology.OntologyService.Update:input_type -> ontology.OntologyUpdateRequest
	12, // 16: ontology.OntologyService.Delete:input_type -> ontology.OntologyDeletionRequest
	5,  // 17: ontology.OntologyService.List:output_type -> ontology.OntologyListResponse
	7,  // 18: ontology.OntologyService.Get:output_type -> ontology.OntologyGetResponse
	9,  // 19: ontology.OntologyService.Create:output_type -> ontology.OntologyCreationResponse
	11, // 20: ontology.OntologyService.Update:output_type -> ontology.OntologyUpdateResponse
	13, // 21: ontology.OntologyService.Delete:output_type -> ontology.OntologyDeletionResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_ontology_proto_init() }
func file_ontology_proto_init() {
	if File_ontology_proto != nil {
		return
	}
	file_ontology_proto_msgTypes[0].OneofWrappers = []any{}
	file_ontology_proto_msgTypes[1].OneofWrappers = []any{}
	file_ontology_proto_msgTypes[2].OneofWrappers = []any{}
	file_ontology_proto_msgTypes[3].OneofWrappers = []any{}
	file_ontology_proto_msgTypes[5].OneofWrappers = []any{}
	file_ontology_proto_msgTypes[6].OneofWrappers = []any{}
	file_ontology_proto_msgTypes[7].OneofWrappers = []any{}
	file_ontology_proto_msgTypes[9].OneofWrappers = []any{}
	file_ontology_proto_msgTypes[11].OneofWrappers = []any{}
	file_ontology_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ontology_proto_rawDesc), len(file_ontology_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ontology_proto_goTypes,
		DependencyIndexes: file_ontology_proto_depIdxs,
		MessageInfos:      file_ontology_proto_msgTypes,
	}.Build()
	File_ontology_proto = out.File
	file_ontology_proto_goTypes = nil
	file_ontology_proto_depIdxs = nil
}
