syntax = "proto3";

package space;

option go_package = "github.com/jupyter-naas/naas-models/go/space";

import "validate.proto";


message Container {
    optional string name = 1 [(validate.rules).string = {
        min_len: 1,
        max_len: 63,
        pattern: "^([A-Za-z0-9-]+)$",
    }];
    optional string image = 2 [(validate.rules).string = {
        pattern: "^[a-zA-Z0-9\\.\\/-]+([:][a-zA-Z0-9\\.\\/-]*)?$";
        min_len: 1;
        ignore_empty: false;
    }];

    map<string, string> env = 3;
    optional int64 port = 4 [(validate.rules).int64 = {gte: 0, lte: 65535}];
    optional string cpu = 5 [(validate.rules).string = {
            pattern: "^[1-9]+(.[1-9]+)?[m]?$";
            ignore_empty: false;
    }];
    optional string memory = 6 [(validate.rules).string = {
        pattern: "^[1-9]+(Mi|Gi|Ki)$";
        ignore_empty: false;
    }];
}

message ContainerUpdate {
    optional string name = 1 [(validate.rules).string = {
        min_len: 1,
        max_len: 63,
        pattern: "^([A-Za-z0-9-]+)$",
    }];
    optional string image = 2 [(validate.rules).string = {
        pattern: "^[a-zA-Z0-9\\.\\/-]+([:][a-zA-Z0-9\\.\\/-]*)?$";
        min_len: 1;
        ignore_empty: false;
    }];

    map<string, string> env = 3;
    optional int64 port = 4 [(validate.rules).int64 = {gte: 0, lte: 65535}];
    optional string cpu = 5 [(validate.rules).string = {
        pattern: "^[1-9]+(.[1-9]+)?[m]?$";
        ignore_empty: false;
    }];
    optional string memory = 6 [(validate.rules).string = {
        pattern: "^[1-9]+(Mi|Gi|Ki)$";
        ignore_empty: false;
    }];
}

// message ContainerPatch {
//     optional string name = 1 [(validate.rules).string = {
//         min_len: 1,
//         max_len: 63,
//         pattern: "^([A-Za-z0-9-]+)$",
//     }];
//     optional string image = 2 [(validate.rules).string = {
//         pattern: "^[a-zA-Z0-9\\.\\/-]+([:][a-zA-Z0-9\\.\\/-]*)?$";
//         min_len: 1;
//         ignore_empty: false;
//     }];

//     map<string, string> env = 3;
//     optional int64 port = 4 [(validate.rules).int64 = {gte: 1, lte: 65535}];
//     optional string cpu = 5 [(validate.rules).string = {
//         pattern: "^[1-9]+m$";
//         ignore_empty: false;
//     }];
//     optional string memory = 6 [(validate.rules).string = {
//         pattern: "^[1-9]+Mi$";
//         ignore_empty: false;
//     }];
// }

message Space {
    optional string name = 1 [(validate.rules).string = {
        pattern: "^([A-Za-z0-9]+(-[A-Za-z0-9]+)+)$",
        min_len: 1,
        max_len: 63,

    }];
    optional string user_id = 2 [(validate.rules).string.uuid = true];
    optional string id = 3 [(validate.rules).string.uuid = true];
    optional string domain = 4 [(validate.rules).string.uri_ref = true];
    repeated Container containers = 5 [(validate.rules).repeated.min_items = 1];
}

message SpaceUpdate {
    optional string domain = 4 [(validate.rules).string.uri_ref = true];
    repeated ContainerUpdate containers = 5 [(validate.rules).repeated.min_items = 1];
}

/**
*   Errors
*/

enum SpaceError {
    SPACE_NO_ERROR = 0;
    SPACE_ALREADY_EXISTS = 1;
    SPACE_NOT_FOUND = 2;
    SPACE_NOT_UPDATED = 3;
    SPACE_MUST_HAVE_ONE_CONTAINER_PORT = 4;
}

message SpaceResponseError {
    optional SpaceError code = 1;
    optional string status = 2;
    optional string reason = 3;
    optional string message = 4;
}

/**
*   SpaceCreation
*/

message SpaceCreationRequest {
    optional string name = 1 [(validate.rules).string = {
        pattern: "^([A-Za-z0-9]+(-[A-Za-z0-9]+)+)$",
        min_len: 1,
        max_len: 63,

    }];
    optional string domain = 4 [(validate.rules).string.uri_ref = true];
    repeated Container containers = 5 [(validate.rules).repeated.min_items = 1];
}

message SpaceCreationResponse {
    optional Space space = 1;
    optional string status = 2;
}

/**
*   SpaceGet
*/

message SpaceGetRequest {
    optional string name = 1 [(validate.rules).string = {
        pattern: "^([A-Za-z0-9]+(-[A-Za-z0-9]+)+)$",
        min_len: 1,
        max_len: 63,
    }];
}

message SpaceGetResponse {
    optional Space space = 1;
    optional string status = 2;
}


/**
*   SpaceDeletion
*/

message SpaceDeletionRequest {
    optional string name = 1 [(validate.rules).string = {
        pattern: "^([A-Za-z0-9]+(-[A-Za-z0-9]+)+)$",
        min_len: 1,
        max_len: 63,
    }];
}

message SpaceDeletionResponse {
    optional string status = 1;
}

/**
*   SpaceList
*/

message SpaceListRequest {
    optional int32 page_size = 1;
    optional int32 page_number = 2;
}

message SpaceListResponse {
    repeated Space spaces = 1;
}

/**
*   SpaceUpdate
*/

message SpaceUpdateRequest {
    optional string name = 1 [(validate.rules).string = {
        pattern: "^([A-Za-z0-9]+(-[A-Za-z0-9]+)+)$",
        min_len: 1,
        max_len: 63,
    }];
    optional SpaceUpdate space = 2;
    // optional string domain = 4 [(validate.rules).string.uri_ref = true];
    // repeated ContainerUpdate containers = 2 [(validate.rules).repeated.min_items = 1];
}

message SpaceUpdateResponse {
    optional Space space = 1;
    optional string status = 2;
}