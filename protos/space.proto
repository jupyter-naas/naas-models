syntax = "proto3";

package space;

option go_package = "github.com/jupyter-naas/naas-models/go/space";

import "validate.proto";

enum Protocol {
    HTTP = 0;
    HTTPS = 1;
}

message Space {

    optional string name = 1 [(validate.rules).string = {
        pattern: "^([A-Za-z0-9]+(-[A-Za-z0-9]+)+)$",
        min_len: 1,
        max_len: 63,

    }];
    optional string user_id = 2 [(validate.rules).string.uuid = true];
    optional string id = 3 [(validate.rules).string.uuid = true];
    optional string created_at = 4 [(validate.rules).string = {
        pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,6})?Z$";
    }];
    map<string, string> resources = 6;
    optional string namespace = 5;
    optional string domain = 9 [(validate.rules).string.uri_ref = true];
    optional string image = 10 [(validate.rules).string = {
        pattern: "^[a-zA-Z0-9\\.\\/-]+([:][a-zA-Z0-9\\.\\/-]*)?$";
    }];
    repeated Protocol protocols = 12;
}

/**
*   Errors
*/

enum SpaceError {
    SPACE_ALREADY_EXISTS = 0;
    SPACE_NOT_FOUND = 1;
}

message SpaceResponseError {
    optional SpaceError code = 1;
    optional string status = 2;
    optional string reason = 3;
    optional string message = 4;
}

/**
*   SpaceCreation
*/

message SpaceCreationRequest {
    optional string name = 1[(validate.rules).string = {
        pattern: "^([A-Za-z0-9]+(-[A-Za-z0-9]+)+)$",
        min_len: 1,
        max_len: 63,
    }];
    optional string user_id = 2[(validate.rules).string.uuid = true];
    optional string namespace = 3;
    optional string image = 4[(validate.rules).string = {
        pattern: "^[a-zA-Z0-9\\.\\/-]+([:][a-zA-Z0-9\\.\\/-]*)?$";
    }];
    map<string, string> env = 6;
}

message SpaceCreationResponse {
    optional Space space = 1;
    optional string status = 2;
}

/**
*   SpaceGet
*/

message SpaceGetRequest {
    optional string name = 1 [(validate.rules).string = {
        pattern: "^([A-Za-z0-9]+(-[A-Za-z0-9]+)+)$",
        min_len: 1,
        max_len: 63,
    }];
    optional string namespace = 2;
}

message SpaceGetResponse {
    optional Space space = 1;
    optional string status = 2;
}


/**
*   SpaceDeletion
*/

message SpaceDeletionRequest {
    optional string name = 1 [(validate.rules).string = {
        pattern: "^([A-Za-z0-9]+(-[A-Za-z0-9]+)+)$",
        min_len: 1,
        max_len: 63,
    }];
    optional string namespace = 2;
}

message SpaceDeletionResponse {
    optional string status = 1;
}

/**
*   SpaceList
*/

message SpaceListRequest {
    optional string user_id = 1[(validate.rules).string.uuid = true];
    optional string namespace = 2;
}

message SpaceListResponse {
    repeated Space spaces = 1;
}